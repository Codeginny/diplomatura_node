
<body>
  <header>
    <h3>Bienvenido a la aplicación de gestión de países. Esta plataforma te permite gestionar un conjunto de países mediante operaciones CRUD (crear, leer, actualizar y eliminar).</h3>
  </header>

  <main>
    <div class="section">
      <h2>Características de la Aplicación</h2>
      <p>Esta aplicación ha sido diseñada para facilitar la gestión de información sobre países. Algunas de las funcionalidades principales son:</p>
      <ul>
        <li><strong>Agregar País:</strong> Permite añadir nuevos países a la base de datos, introduciendo información como el nombre del país, su capital, idioma oficial, y otros detalles relevantes.</li>
        <li><strong>Editar País:</strong> Modifica los detalles de un país ya existente en la base de datos. Puedes actualizar la información como el nombre, la población, el área y otros datos.</li>
        <li><strong>Eliminar País:</strong> Elimina países de la base de datos de forma permanente. Esta opción es útil si un país ya no es relevante o si se desea limpiar la base de datos.</li>
        <li><strong>Ver Detalles:</strong> Permite consultar la información detallada de un país, como su economía, historia, cultura y geografía, todo a través de una vista amigable y clara.</li>
      </ul>
    </div>

    <div class="section">
      <h2>Tecnologías Usadas</h2>
      <p>Esta aplicación está construida utilizando un conjunto de tecnologías modernas que permiten una experiencia de usuario rápida y eficiente. Las tecnologías utilizadas son:</p>
      <ul>
        <li><strong>Node.js:</strong> Un entorno de ejecución de JavaScript en el lado del servidor, que permite desarrollar aplicaciones de alta performance y escalabilidad utilizando el mismo lenguaje tanto en el cliente como en el servidor.</li>
        <li><strong>Express:</strong> Framework minimalista para construir aplicaciones web y APIs en Node.js. Express facilita la creación de rutas, manejo de solicitudes HTTP y gestión de middleware.</li>
        <li><strong>MongoDB:</strong> Base de datos NoSQL altamente escalable y flexible. MongoDB almacena la información de los países de manera estructurada pero flexible, permitiendo adaptarse a cambios de los datos con facilidad.</li>
        <li><strong>Mongoose:</strong> ODM (Object Data Modeling) para MongoDB, que facilita la interacción con la base de datos mediante un modelo de objetos, proporcionando una capa de abstracción que facilita la manipulación de los datos en MongoDB.</li>
        <li><strong>Axios:</strong> Un cliente HTTP que permite realizar solicitudes a APIs externas, facilitando la integración con servicios y recursos adicionales que proporcionan información relevante sobre los países.</li>
        <li><strong>HTML, CSS, JavaScript:</strong> Tecnologías esenciales para el desarrollo web. HTML se utiliza para estructurar el contenido de las páginas, CSS para el diseño y la apariencia, y JavaScript para la interactividad y dinamismo en la interfaz.</li>
      </ul>
    </div>

    <div class="section">
      <h2>Explicación del Código</h2>
      <p>A continuación se explica el funcionamiento del código y la estructura utilizada en la aplicación:</p>
      <ul>
        <li><strong>Rutas de Express:</strong> Las rutas están definidas en el archivo <code>countries.js</code>, donde se manejan las operaciones CRUD. Cada ruta está asociada a una acción específica, como listar los países, agregar un nuevo país, editar un país existente o eliminar uno de la base de datos. Estas rutas reciben y responden a solicitudes HTTP, y realizan las acciones correspondientes sobre los datos almacenados en MongoDB.</li>
        <li><strong>Modelo de Datos:</strong> El modelo de datos se encuentra en el archivo <code>models/Country.js</code>, donde se define la estructura de la base de datos para los países. Este modelo establece qué datos se almacenan (como el nombre, la capital, el idioma, etc.) y cómo se validan y gestionan esos datos antes de ser almacenados en MongoDB.</li>
        <li><strong>Servicios:</strong> La lógica para interactuar con APIs externas se encuentra en <code>services/countriesService.mjs</code>. Estos servicios son responsables de hacer peticiones HTTP a fuentes externas para obtener datos adicionales sobre los países, como estadísticas, clima o noticias, y luego los procesan y presentan al usuario de forma organizada.</li>
        <li><strong>Validaciones:</strong> Se utiliza la biblioteca <code>express-validator</code> para garantizar que los datos ingresados por el usuario sean correctos y válidos antes de ser procesados y almacenados en la base de datos. Esto incluye validar que los campos como el nombre del país, la población y la capital sean correctos y que no falten datos esenciales.</li>
        <li><strong>Vistas:</strong> La aplicación utiliza EJS (Embedded JavaScript) para la renderización dinámica de las vistas. EJS permite insertar directamente datos en el HTML, de manera que la interfaz del usuario se actualiza automáticamente cuando se modifica la base de datos o se realizan nuevas interacciones.</li>
      </ul>
    </div>
  </main>
</body>
</html>
