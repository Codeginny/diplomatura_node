<h1>Gestión de Países</h1>
    <p>Bienvenido a la aplicación de gestión de países. Agrega, edita, elimina y visualiza detalles de los países fácilmente.</p>
  </header>
  <main>
    <div class="section">
      <h2>Características de la Aplicación</h2>
      <ul>
        <li><strong>Agregar País:</strong> Añadir nuevos países a la base de datos.</li>
        <li><strong>Editar País:</strong> Modificar los detalles de países existentes.</li>
        <li><strong>Eliminar País:</strong> Eliminar países de la base de datos.</li>
        <li><strong>Ver Detalles:</strong> Consultar la información detallada de cada país.</li>
      </ul>
    </div>

    <div class="section">
      <h2>Tecnologías Usadas</h2>
      <ul>
        <li><strong>Node.js:</strong> Entorno de ejecución de JavaScript.</li>
        <li><strong>Express:</strong> Framework para aplicaciones web y APIs.</li>
        <li><strong>MongoDB:</strong> Base de datos NoSQL para almacenar los países.</li>
        <li><strong>Mongoose:</strong> ODM para interactuar con MongoDB.</li>
        <li><strong>Axios:</strong> Cliente HTTP para traer datos externos.</li>
        <li><strong>HTML, CSS, JavaScript:</strong> Tecnologías web esenciales.</li>
      </ul>
    </div>

    <div class="section">
      <h2>Explicación del Código</h2>
      <ul>
        <li><strong>Rutas de Express:</strong> Definidas en `countries.js` para listar, agregar, editar y eliminar países.</li>
        <li><strong>Modelo de Datos:</strong> Definido en `models/Country.js`, estructura de la base de datos.</li>
        <li><strong>Servicios:</strong> Lógica para interactuar con APIs externas en `services/countriesService.mjs`.</li>
        <li><strong>Validaciones:</strong> Se utiliza `express-validator` para garantizar datos correctos.</li>
        <li><strong>Vistas:</strong> Renderización dinámica usando EJS.</li>
      </ul>
    </div>
  </main>